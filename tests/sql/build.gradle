/*
 * Copyright (c) 2016 SnappyData, Inc. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License"); you
 * may not use this file except in compliance with the License. You
 * may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
 * implied. See the License for the specific language governing
 * permissions and limitations under the License. See accompanying
 * LICENSE file.
 */

plugins {
  id 'com.github.johnrengelman.shadow' version '1.2.3'
}

sourceSets.main.java {
  // requires WebLogic jars
  exclude 'sql/ecotests/wls/**'
  // tpce app is not in main compilation unit
  exclude 'sql/ecotests/tpce/implementation/**'
}

// need to exclude specificially in IDEA
idea {
  module {
    excludeDirs += file('src/main/java/sql/ecotests/wls')
    excludeDirs += file('src/main/java/sql/ecotests/tpce/implementation')
  }
}

ext {
  createdBy = System.getProperty('user.name')
  derbyOldVersion = '10.8.2.2'
}

dependencies {
  provided project(subprojectBase + 'gemfire-core')
  compile project(subprojectBase + 'gemfire-tests')
  compile project(subprojectBase + 'gemfirexd-client')
  provided project(subprojectBase + 'gemfirexd-tools')
  provided project(subprojectBase + 'gemfirexd-core')

  provided "org.apache.hadoop:hadoop-annotations:${hadoopVersion}"
  provided "org.apache.hadoop:hadoop-auth:${hadoopVersion}"
  provided "org.apache.hadoop:hadoop-common:${hadoopVersion}"
  provided "org.apache.hadoop:hadoop-hdfs:${hadoopVersion}"
  provided "org.apache.hadoop:hadoop-mapreduce-client-core:${hadoopVersion}"
  provided "com.google.protobuf:protobuf-java:${protobufVersion}"
  provided "com.sun.jersey:jersey-core:${sunJerseyVersion}"
  provided "com.sun.jersey:jersey-server:${sunJerseyVersion}"
  provided "com.sun.jersey:jersey-servlet:${sunJerseyVersion}"
  provided "org.mortbay.jetty:jetty:${hadoopJettyVersion}"
  provided "org.mortbay.jetty:jetty-util:${hadoopJettyVersion}"
  provided "com.google.code.findbugs:jsr305:${jsr305Version}"

  provided "org.springframework:spring-aop:${springVersion}"
  provided "org.springframework:spring-beans:${springVersion}"
  provided "org.springframework:spring-context:${springVersion}"
  provided "org.springframework:spring-context-support:${springVersion}"
  provided "org.springframework:spring-core:${springVersion}"
  provided "org.springframework:spring-expression:${springVersion}"
  provided "org.springframework:spring-web:${springVersion}"
  provided "org.springframework:spring-webmvc:${springVersion}"
  provided "org.springframework:spring-tx:${springVersion}"

  compile 'com.googlecode.json-simple:json-simple:1.1.1'
  compile 'org.hibernate.javax.persistence:hibernate-jpa-2.0-api:1.0.1.Final'
  compile 'javax.ejb:javax.ejb-api:3.2'
  compile 'org.apache.tomcat:tomcat-juli:8.5.9'
  compile 'org.apache.tomcat:tomcat-jdbc:8.5.9'
  compile 'com.mchange:c3p0:0.9.5.2'
  compile "org.apache.derby:derbytools:${derbyVersion}"
  runtime "org.apache.derby:derby:${derbyVersion}"
  runtime "org.apache.derby:derbynet:${derbyVersion}"
  runtime "org.apache.derby:derbyclient:${derbyVersion}"
  runtime "org.apache.spark:spark-unsafe_${scalaBinaryVersion}:${sparkVersion}"
}

// apply default manifest
if (rootProject.hasProperty('enablePublish')) {
  createdBy = 'SnappyData Build Team'
}
shadowJar {
  zip64 = true

  mergeServiceFiles()

  manifest {
    attributes(
      'Manifest-Version'  : '1.0',
      'Created-By'        : createdBy,
      'Title'             : rootProject.name,
      'Version'           : version,
      'Vendor'            : 'Pivotal Software, Inc.'
    )
  }
}

archivesBaseName = 'snappydata-store-hydra-tests'
jar.dependsOn shadowJar
